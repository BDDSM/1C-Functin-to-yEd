{3,
{46,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаСформировать",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСформироватьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},7,"ТекстXGML",1,0,
{1,0},
{1,0},
{1,
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,0,0,1,0},
{0,1,0},1,
{21,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТекстXGMLКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекстXGMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",2,0,0,0,0,0,3,3,0,0,2,100,1,1,0},"&НаСервереБезКонтекста
Функция ПолучитьТаблицуРегистров()

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить(""ВидДокумента"");
	Таблица.Колонки.Добавить(""Регистр"");
	Таблица.Колонки.Добавить(""ВидРегистра"");
	
	Для Каждого мДокумент Из Метаданные.Документы Цикл
		
		ВидДокумента = мДокумент.Имя;
		
		Для Каждого мДвижение Из мДокумент.Движения Цикл
			
			Строка = Таблица.Добавить();
			Строка.ВидДокумента = ВидДокумента;
			Строка.Регистр = мДвижение.Имя;
			Строка.ВидРегистра = ОпределитьВидРегистра(мДвижение);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Таблица;

КонецФункции // ПолучитьТаблицуРегистров()

&НаСервереБезКонтекста
Функция ОпределитьВидРегистра(мДвижение)
	
	Перем ЗначениеВозврата;
	
	Если Метаданные.РегистрыБухгалтерии.Содержит(мДвижение) Тогда
		ЗначениеВозврата = ""РегистрБухгалтерии"";
	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(мДвижение) Тогда
		ЗначениеВозврата = ""РегистрНакопления"";
	ИначеЕсли Метаданные.РегистрыРасчета.Содержит(мДвижение) Тогда
		ЗначениеВозврата = ""РегистрРасчета"";
	ИначеЕсли Метаданные.РегистрыСведений.Содержит(мДвижение) Тогда
		ЗначениеВозврата = ""РегистрСведений"";
	КонецЕсли;
	
	Возврат ЗначениеВозврата;
		
КонецФункции // ОпределитьВидРегистра()

&НаСервереБезКонтекста
Функция ПолучитьТекстXGML()

	ТаблицаРегистров = ПолучитьТаблицуРегистров();
	
	СводнаяТаблица = ТаблицаРегистров.Скопировать(, ""Регистр, ВидРегистра"");
	СводнаяТаблица.Свернуть(""Регистр, ВидРегистра"");
	
	ТекстЗапроса = """";
	Для Каждого СтрокаТаблицы Из СводнаяТаблица Цикл
		
		ТекстЗапроса = ТекстЗапроса + ?(ПустаяСтрока(ТекстЗапроса), """", ""
		|	ОБЪЕДИНИТЬ ВСЕ
		|"") + ПолучитьТекстЗапроса(СтрокаТаблицы.Регистр, СтрокаТаблицы.ВидРегистра);
		
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстЗапроса) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ""
	|ИТОГИ
	|	СУММА(КоличествоДокументов)
	|ПО
	|	ВидРегистра,
	|	ИмяРегистра"";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Возврат ОбработататьРезультатЗапроса(Запрос.Выполнить());
	
КонецФункции// ТекстXGML()

&НаСервереБезКонтекста
Функция ОбработататьРезультатЗапроса(Результат)

	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КэшРегистраторы = Новый Соответствие;
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(""section"");
	ЗаписьXML.ЗаписатьАтрибут(""name"", ""xgml"");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(""section"");
	ЗаписьXML.ЗаписатьАтрибут(""name"", ""graph"");
	
	СоздатьГруппуXGML(ЗаписьXML, ""Документы"", ""Документы"");
	
	ВидыРегистров = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВидыРегистров.Следующий() Цикл
		
		ВидРегистра = ВидыРегистров.ВидРегистра;
		СоздатьГруппуXGML(ЗаписьXML, ВидРегистра);
		
		Регистры = ВидыРегистров.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Регистры.Следующий() Цикл
			
			ИмяРегистра = Регистры.ИмяРегистра;
			СоздатьЭлементXGML(ЗаписьXML, ИмяРегистра, ВидРегистра);
			
			Регистраторы = Регистры.Выбрать();
			Пока Регистраторы.Следующий() Цикл
				ВидДокумента = Строка(Регистраторы.ВидДокумента);
				Если НЕ ЗначениеЗаполнено(КэшРегистраторы[ВидДокумента]) Тогда
					СоздатьЭлементXGML(ЗаписьXML, ВидДокумента, ""Документы"");
					КэшРегистраторы.Вставить(ВидДокумента, Истина);
				КонецЕсли;
				
				СоздатьСвязьXGML(ЗаписьXML, ВидДокумента, ИмяРегистра);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); //graph
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); //xgml
	
	Возврат ЗаписьXML.Закрыть();

КонецФункции // ОбработататьРезультатЗапроса()

&НаСервереБезКонтекста
Процедура СоздатьСвязьXGML(ЗаписьXML, Начало, Конец)

	ЗаписатьНачалоСекцииXGML(ЗаписьXML, ""edge"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""source"", ""string"", Начало);
	ЗаписатьАтрибутXGML(ЗаписьXML, ""target"", ""string"", Конец);
	
	ЗаписатьНачалоСекцииXGML(ЗаписьXML, ""graphics"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""fill"", ""string"", ""#000000"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""targetArrow"", ""string"", ""standard"");
	ЗаписьXML.ЗаписатьКонецЭлемента(); //graphics
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); //edge

КонецПроцедуры // СоздатьСвязьXGML()

&НаСервереБезКонтекста
Процедура СоздатьЭлементXGML(ЗаписьXML, ИмяЭлемента, ГруппаЭлемента = """");

	ЗаписатьНачалоСекцииXGML(ЗаписьXML, ""node"");
	
	ЗаписатьАтрибутXGML(ЗаписьXML, ""id"", ""string"", ИмяЭлемента);
	ЗаписатьАтрибутXGML(ЗаписьXML, ""label"", ""string"", ИмяЭлемента);
	
	ЗаписатьНачалоСекцииXGML(ЗаписьXML, ""graphics"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""type"", ""string"", ""rectangle"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""fill"", ""string"", ""#FFCC00"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""outline"", ""string"", ""#000000"");
	ЗаписьXML.ЗаписатьКонецЭлемента(); //graphics
	
	ЗаписатьНачалоСекцииXGML(ЗаписьXML, ""LabelGraphics"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""text"", ""String"", ИмяЭлемента);
	ЗаписатьАтрибутXGML(ЗаписьXML, ""fontSize"", ""int"", ""12"");
	ЗаписьXML.ЗаписатьКонецЭлемента(); //LabelGraphics
	
	Если НЕ ПустаяСтрока(ГруппаЭлемента) Тогда
		ЗаписатьАтрибутXGML(ЗаписьXML, ""gid"", ""String"", ГруппаЭлемента);
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); //node

КонецПроцедуры // СоздатьЭлементXGML()

&НаСервереБезКонтекста
Процедура СоздатьГруппуXGML(ЗаписьXML, ИмяГруппы, ЗаголовокГруппы = """")

	Если ПустаяСтрока(ЗаголовокГруппы) Тогда
		ЗаголовокГруппы = ИмяГруппы;
	КонецЕсли;
	
	ЗаписатьНачалоСекцииXGML(ЗаписьXML, ""node"");
	
	ЗаписатьАтрибутXGML(ЗаписьXML, ""id"", ""string"", ИмяГруппы);
	ЗаписатьАтрибутXGML(ЗаписьXML, ""label"", ""string"", ЗаголовокГруппы);
	
	ЗаписатьНачалоСекцииXGML(ЗаписьXML, ""graphics"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""type"", ""string"", ""roundrectangle"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""fill"", ""string"", ""#F5F5F5"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""outline"", ""string"", ""#000000"");
	ЗаписьXML.ЗаписатьКонецЭлемента(); //graphics
	
	ЗаписатьНачалоСекцииXGML(ЗаписьXML, ""LabelGraphics"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""text"", ""String"", ЗаголовокГруппы);
	ЗаписатьАтрибутXGML(ЗаписьXML, ""fill"", ""String"", ""#EBEBEB"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""fontSize"", ""int"", ""14"");
	ЗаписатьАтрибутXGML(ЗаписьXML, ""anchor"", ""String"", ""t"");
	ЗаписьXML.ЗаписатьКонецЭлемента(); //LabelGraphics
	
	ЗаписатьАтрибутXGML(ЗаписьXML, ""isGroup"", ""boolean"", ""true"");
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); //node

КонецПроцедуры // СоздатьГруппуXGML()

&НаСервереБезКонтекста
Процедура ЗаписатьНачалоСекцииXGML(ЗаписьXML, name)

	ЗаписьXML.ЗаписатьНачалоЭлемента(""section"");
	ЗаписьXML.ЗаписатьАтрибут(""name"", name);

КонецПроцедуры // ЗаписатьНачалоСекции()

&НаСервереБезКонтекста
Процедура ЗаписатьАтрибутXGML(ЗаписьXML, key, type, text)
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(""attribute"");
	ЗаписьXML.ЗаписатьАтрибут(""key"", key);
	ЗаписьXML.ЗаписатьАтрибут(""type"", type);
	ЗаписьXML.ЗаписатьТекст(text);
	ЗаписьXML.ЗаписатьКонецЭлемента(); //attribute
	
КонецПроцедуры // ЗаписатьАтрибутXGML()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапроса(ИмяРегистра, ВидРегистра)
	
	ВидРегистраСтрока = """""""" + ВидРегистра + """""""";
	ИмяРегистраСтрока = """""""" + ИмяРегистра + """""""";
	
	ТекстЗапроса = 
	""ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(Движения.Регистратор) КАК ВидДокумента,
	|	"" + ВидРегистраСтрока+ "" КАК ВидРегистра,
	|	"" + ИмяРегистраСтрока+ "" КАК ИмяРегистра,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Движения.Регистратор) КАК КоличествоДокументов
	|ИЗ
	|	""+ВидРегистра+"".""+ИмяРегистра+"" КАК Движения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТИПЗНАЧЕНИЯ(Движения.Регистратор)"";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура Сформировать(Команда)
	
	ТекстXGML = ПолучитьТекстXGML();
	
КонецПроцедуры
",
{4,2,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",9a81e79a-3f27-464a-a8b7-32ff4b14a7dc}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ТекстXGML",
{1,1,
{"ru","Текст XGML"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,1,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Сформировать",
{1,1,
{"ru","Сформировать"}
},
{1,1,
{"ru","Сформировать"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"Сформировать",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}